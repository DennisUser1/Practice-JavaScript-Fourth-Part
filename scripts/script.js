// Який тип значень не підтримується у форматі JSON? Function
// На ілюстрації валідний JSON? False
// {
//     username: "Mango",
//     age: 2
// }
// На ілюстрації валідний JSON? False
// {
//     "username": "Mango",
//     "age": 2,
// }
// Яким буде результат? Помилка парсингу
// const data = JSON.parse("Welcome to the future!");
// console.log(data);
// Яка конструкція дозволяє обробляти помилки парсингу JSON? try...catch
// Яким буде результат? Рядок  '{"username": "Mango"}'
// const user = {
//     username: "Mango",
//     showName() {
//         console.log(this.username);
//     }
// };
// const json = JSON.stringify(user);
// console.log(json);
// Чи очищається локальне сховище при закритті вкладки браузера? False
// У якому форматі будь-які дані зберігаються у локальному сховищі? Рядки
// Який метод робить запис у локальне сховище? localStorage.setItem(key, value)
// Який метод читає дані з локального сховища? localStorage.getItem(key)
// Який метод видаляє запис із локального сховища? localStorage.removeItem(key)
// Який метод видаляє всі записи з локального сховища? localStorage.clear()

/*
Алгоритм без сховища
    1. отримати посилання на всі дом елементи
    2. повісити обробники подій на кнопку едд(по кліку) і на список ul(для делегування по кліку)
    3. функціонал додавання нової замітки
        3.1. зчитати текст з інпуту
        3.2. перевірка на пусте значення(повідомляти користувача)
        3.3. створення нової лішки
        3.4. додавання лішки у список
        3.5. очистити поле вводу
    4. функціонал виконаної задачі (ф-ція яка додає клас чекд або прибирає його)
    5. при натисканні на крестик - видалити елемент

Алгоритм зі сховищем
    1. створити ключ для сховища
    2. зберігати задачі у форматі: масив з обʼєктів вигляду: {
        text: string,
        isDone: boolean,
        id: number
    }
    3. створимо змінну для ID
    4. після натискання на кнопку едд викликати ф-цію, яка буде створювати обʼєкт задачі і потім додавати його в масив з локал стореджу
    5. створимо дата-айді у кожної лішки при створенні
    6. при кліку на лішку змінити статус в локалстореджі
    7. при кліку на крестик видалити обʼєкт з локалстореджу
    8. написати ф-цію, яка буде зчитувати задачі з локалстореджу і показувати їх користувачу на екрані
*/

import refs from "./refs.js";
import { addNewTask, handleTaskBehaviour, fillTasksList } from "./functions.js";

refs.addBtn.addEventListener("click", addNewTask);
refs.myUL.addEventListener("click", handleTaskBehaviour);
window.addEventListener("DOMContentLoaded", fillTasksList);